// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type Error struct {
	Error string `json:"error"`
}

// GetError returns the value of Error.
func (s *Error) GetError() string {
	return s.Error
}

// SetError sets the value of Error.
func (s *Error) SetError(val string) {
	s.Error = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWalletInfoCompressedInfo returns new OptWalletInfoCompressedInfo with value set to v.
func NewOptWalletInfoCompressedInfo(v WalletInfoCompressedInfo) OptWalletInfoCompressedInfo {
	return OptWalletInfoCompressedInfo{
		Value: v,
		Set:   true,
	}
}

// OptWalletInfoCompressedInfo is optional WalletInfoCompressedInfo.
type OptWalletInfoCompressedInfo struct {
	Value WalletInfoCompressedInfo
	Set   bool
}

// IsSet returns true if OptWalletInfoCompressedInfo was set.
func (o OptWalletInfoCompressedInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWalletInfoCompressedInfo) Reset() {
	var v WalletInfoCompressedInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWalletInfoCompressedInfo) SetTo(v WalletInfoCompressedInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWalletInfoCompressedInfo) Get() (v WalletInfoCompressedInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWalletInfoCompressedInfo) Or(d WalletInfoCompressedInfo) WalletInfoCompressedInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/WalletInfo
type WalletInfo struct {
	Owner          string                      `json:"owner"`
	JettonWallet   string                      `json:"jetton_wallet"`
	CustomPayload  string                      `json:"custom_payload"`
	StateInit      OptString                   `json:"state_init"`
	CompressedInfo OptWalletInfoCompressedInfo `json:"compressed_info"`
}

// GetOwner returns the value of Owner.
func (s *WalletInfo) GetOwner() string {
	return s.Owner
}

// GetJettonWallet returns the value of JettonWallet.
func (s *WalletInfo) GetJettonWallet() string {
	return s.JettonWallet
}

// GetCustomPayload returns the value of CustomPayload.
func (s *WalletInfo) GetCustomPayload() string {
	return s.CustomPayload
}

// GetStateInit returns the value of StateInit.
func (s *WalletInfo) GetStateInit() OptString {
	return s.StateInit
}

// GetCompressedInfo returns the value of CompressedInfo.
func (s *WalletInfo) GetCompressedInfo() OptWalletInfoCompressedInfo {
	return s.CompressedInfo
}

// SetOwner sets the value of Owner.
func (s *WalletInfo) SetOwner(val string) {
	s.Owner = val
}

// SetJettonWallet sets the value of JettonWallet.
func (s *WalletInfo) SetJettonWallet(val string) {
	s.JettonWallet = val
}

// SetCustomPayload sets the value of CustomPayload.
func (s *WalletInfo) SetCustomPayload(val string) {
	s.CustomPayload = val
}

// SetStateInit sets the value of StateInit.
func (s *WalletInfo) SetStateInit(val OptString) {
	s.StateInit = val
}

// SetCompressedInfo sets the value of CompressedInfo.
func (s *WalletInfo) SetCompressedInfo(val OptWalletInfoCompressedInfo) {
	s.CompressedInfo = val
}

type WalletInfoCompressedInfo struct {
	Amount    string `json:"amount"`
	StartFrom string `json:"start_from"`
	ExpiredAt string `json:"expired_at"`
}

// GetAmount returns the value of Amount.
func (s *WalletInfoCompressedInfo) GetAmount() string {
	return s.Amount
}

// GetStartFrom returns the value of StartFrom.
func (s *WalletInfoCompressedInfo) GetStartFrom() string {
	return s.StartFrom
}

// GetExpiredAt returns the value of ExpiredAt.
func (s *WalletInfoCompressedInfo) GetExpiredAt() string {
	return s.ExpiredAt
}

// SetAmount sets the value of Amount.
func (s *WalletInfoCompressedInfo) SetAmount(val string) {
	s.Amount = val
}

// SetStartFrom sets the value of StartFrom.
func (s *WalletInfoCompressedInfo) SetStartFrom(val string) {
	s.StartFrom = val
}

// SetExpiredAt sets the value of ExpiredAt.
func (s *WalletInfoCompressedInfo) SetExpiredAt(val string) {
	s.ExpiredAt = val
}

// Ref: #/components/schemas/WalletList
type WalletList struct {
	Wallets  []WalletListWalletsItem `json:"wallets"`
	NextFrom string                  `json:"next_from"`
}

// GetWallets returns the value of Wallets.
func (s *WalletList) GetWallets() []WalletListWalletsItem {
	return s.Wallets
}

// GetNextFrom returns the value of NextFrom.
func (s *WalletList) GetNextFrom() string {
	return s.NextFrom
}

// SetWallets sets the value of Wallets.
func (s *WalletList) SetWallets(val []WalletListWalletsItem) {
	s.Wallets = val
}

// SetNextFrom sets the value of NextFrom.
func (s *WalletList) SetNextFrom(val string) {
	s.NextFrom = val
}

type WalletListWalletsItem struct {
	Owner          string                              `json:"owner"`
	CompressedInfo WalletListWalletsItemCompressedInfo `json:"compressed_info"`
}

// GetOwner returns the value of Owner.
func (s *WalletListWalletsItem) GetOwner() string {
	return s.Owner
}

// GetCompressedInfo returns the value of CompressedInfo.
func (s *WalletListWalletsItem) GetCompressedInfo() WalletListWalletsItemCompressedInfo {
	return s.CompressedInfo
}

// SetOwner sets the value of Owner.
func (s *WalletListWalletsItem) SetOwner(val string) {
	s.Owner = val
}

// SetCompressedInfo sets the value of CompressedInfo.
func (s *WalletListWalletsItem) SetCompressedInfo(val WalletListWalletsItemCompressedInfo) {
	s.CompressedInfo = val
}

type WalletListWalletsItemCompressedInfo struct {
	Amount    string `json:"amount"`
	StartFrom string `json:"start_from"`
	ExpiredAt string `json:"expired_at"`
}

// GetAmount returns the value of Amount.
func (s *WalletListWalletsItemCompressedInfo) GetAmount() string {
	return s.Amount
}

// GetStartFrom returns the value of StartFrom.
func (s *WalletListWalletsItemCompressedInfo) GetStartFrom() string {
	return s.StartFrom
}

// GetExpiredAt returns the value of ExpiredAt.
func (s *WalletListWalletsItemCompressedInfo) GetExpiredAt() string {
	return s.ExpiredAt
}

// SetAmount sets the value of Amount.
func (s *WalletListWalletsItemCompressedInfo) SetAmount(val string) {
	s.Amount = val
}

// SetStartFrom sets the value of StartFrom.
func (s *WalletListWalletsItemCompressedInfo) SetStartFrom(val string) {
	s.StartFrom = val
}

// SetExpiredAt sets the value of ExpiredAt.
func (s *WalletListWalletsItemCompressedInfo) SetExpiredAt(val string) {
	s.ExpiredAt = val
}
